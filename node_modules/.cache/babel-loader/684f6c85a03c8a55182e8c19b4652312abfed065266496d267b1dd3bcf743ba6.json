{"ast":null,"code":"// import React, { useState } from \"react\";\n// import BookingForm from \"./components/BookingForm/BookingForm\";\n// import Theater from \"./components/Theater/Theater\";\n// import Login from \"./components/Login/Login\";\n// import \"./styles.css\";\n// const App = () => {\n//   const [user, setUser] = useState(null);\n//   const [seats, setSeats] = useState(generateSeats());\n//   const [bookings, setBookings] = useState([]);\n//   function generateSeats() {\n//     const rows = \"ABCDEF\";\n//     const seats = [];\n//     for (let i = 0; i < rows.length; i++) {\n//       seats.push(\n//         Array.from({ length: i === 5 ? 6 : 8 }, (_, index) => ({\n//           status: \"available\",\n//           name: `${rows[i]}${index + 1}`,\n//         }))\n//       );\n//     }\n//     return seats;\n//   }\n//   const handleSeatSelect = (rowIndex, seatIndex) => {\n//     if (!user) {\n//       alert(\"Please login first.\");\n//       return;\n//     }\n//     const updatedSeats = [...seats];\n//     const seat = updatedSeats[rowIndex][seatIndex];\n//     if (seat.status === \"available\") {\n//       seat.status = \"selected\";\n//     } else if (seat.status === \"selected\") {\n//       seat.status = \"available\";\n//     }\n//     setSeats(updatedSeats);\n//   };\n//   const handleBookingSubmit = ({ name, numTickets }) => {\n//     if (!user) {\n//       alert(\"Please login first.\");\n//       return;\n//     }\n//     const selectedSeatsCount = seats\n//       .flat()\n//       .filter((seat) => seat.status === \"selected\").length;\n//     if (selectedSeatsCount !== numTickets) {\n//       alert(\"Please select the correct number of seats.\");\n//       return;\n//     }\n//     const booking = { name, seats: [] };\n//     seats.forEach((row, rowIndex) => {\n//       row.forEach((seat, seatIndex) => {\n//         if (seat.status === \"selected\") {\n//           booking.seats.push(\n//             `${String.fromCharCode(65 + rowIndex)}${seatIndex + 1}`\n//           );\n//           seat.status = \"blocked\";\n//         }\n//       });\n//     });\n//     setBookings([...bookings, booking]);\n//     setSeats([...seats]);\n//   };\n//   const handleLogin = (username) => {\n//     setUser(username);\n//   };\n//   const handleLogout = () => {\n//     setUser(null);\n//   };\n//   const getTotalSeats = () => seats.flat().length;\n//   const getBookedSeats = () =>\n//     bookings.reduce((acc, booking) => acc + booking.seats.length, 0);\n//   const getAvailableSeats = () => getTotalSeats() - getBookedSeats();\n//   return (\n//     <div className=\"app\">\n//       <h1 className=\"title\">Book My Movie</h1>\n//       {user ? (\n//         <div className=\"user-section\">\n//           <p>Welcome, {user}!</p>\n//           <button onClick={handleLogout}>Logout</button>\n//           <BookingForm onSubmit={handleBookingSubmit} />\n//           <Theater seats={seats} onSelectSeat={handleSeatSelect} />\n//           <div className=\"booking-details\">\n//             <h2>Booking Details</h2>\n//             <p>Total Seats: {getTotalSeats()}</p>\n//             <p>Booked Seats: {getBookedSeats()}</p>\n//             <p>Available Seats: {getAvailableSeats()}</p>\n//             <h3>Bookings:</h3>\n//             <ul>\n//               {bookings.map((booking, index) => (\n//                 <li key={index}>\n//                   {booking.name} - Seats: {booking.seats.join(\", \")}\n//                 </li>\n//               ))}\n//             </ul>\n//           </div>\n//         </div>\n//       ) : (\n//         <Login onLogin={handleLogin} />\n//       )}\n//     </div>\n//   );\n// };\n// export default App;\nimport React,{useState}from\"react\";import BookingForm from\"./components/BookingForm/BookingForm\";import Theater from\"./components/Theater/Theater\";import Login from\"./components/Login/Login\";import\"./styles.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[user,setUser]=useState(null);const[seats,setSeats]=useState(generateSeats());const[bookings,setBookings]=useState([]);function generateSeats(){const rows=\"ABCDEF\";const seats=[];for(let i=0;i<rows.length;i++){seats.push(Array.from({length:i===5?6:8},(_,index)=>({status:\"available\",name:\"\".concat(rows[i]).concat(index+1)})));}return seats;}const handleSeatSelect=(rowIndex,seatIndex)=>{if(!user){alert(\"Please login first.\");return;}const updatedSeats=[...seats];const seat=updatedSeats[rowIndex][seatIndex];if(seat.status===\"available\"){seat.status=\"selected\";}else if(seat.status===\"selected\"){seat.status=\"available\";}setSeats(updatedSeats);};const handleBookingSubmit=_ref=>{let{name,numTickets}=_ref;if(!user){alert(\"Please login first.\");return;}const selectedSeatsCount=seats.flat().filter(seat=>seat.status===\"selected\").length;if(selectedSeatsCount!==numTickets){alert(\"Please select the correct number of seats.\");return;}const booking={name,seats:[]};seats.forEach((row,rowIndex)=>{row.forEach((seat,seatIndex)=>{if(seat.status===\"selected\"){booking.seats.push(\"\".concat(String.fromCharCode(65+rowIndex)).concat(seatIndex+1));seat.status=\"blocked\";}});});setBookings([...bookings,booking]);setSeats([...seats]);};const handleLogin=username=>{setUser(username);};const handleLogout=()=>{setUser(null);};const getTotalSeats=()=>seats.flat().length;const getBookedSeats=()=>bookings.reduce((acc,booking)=>acc+booking.seats.length,0);const getAvailableSeats=()=>getTotalSeats()-getBookedSeats();return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:\"Book My Movie\"}),user?/*#__PURE__*/_jsxs(\"div\",{className:\"user-section\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Welcome, \",user,\"!\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"logout-button\",onClick:handleLogout,children:\"Logout\"}),/*#__PURE__*/_jsx(BookingForm,{onSubmit:handleBookingSubmit}),/*#__PURE__*/_jsx(Theater,{seats:seats,onSelectSeat:handleSeatSelect}),/*#__PURE__*/_jsxs(\"div\",{className:\"booking-details\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Booking Details\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Total Seats: \",getTotalSeats()]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Booked Seats: \",getBookedSeats()]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Available Seats: \",getAvailableSeats()]}),/*#__PURE__*/_jsx(\"h3\",{children:\"Bookings:\"}),/*#__PURE__*/_jsx(\"ul\",{children:bookings.map((booking,index)=>/*#__PURE__*/_jsxs(\"li\",{children:[booking.name,\" - Seats: \",booking.seats.join(\", \")]},index))})]})]}):/*#__PURE__*/_jsx(Login,{onLogin:handleLogin})]});};export default App;","map":{"version":3,"names":["React","useState","BookingForm","Theater","Login","jsx","_jsx","jsxs","_jsxs","App","user","setUser","seats","setSeats","generateSeats","bookings","setBookings","rows","i","length","push","Array","from","_","index","status","name","concat","handleSeatSelect","rowIndex","seatIndex","alert","updatedSeats","seat","handleBookingSubmit","_ref","numTickets","selectedSeatsCount","flat","filter","booking","forEach","row","String","fromCharCode","handleLogin","username","handleLogout","getTotalSeats","getBookedSeats","reduce","acc","getAvailableSeats","className","children","onClick","onSubmit","onSelectSeat","map","join","onLogin"],"sources":["C:/Users/Jayfix/Downloads/myfile/src/App.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import BookingForm from \"./components/BookingForm/BookingForm\";\n// import Theater from \"./components/Theater/Theater\";\n// import Login from \"./components/Login/Login\";\n// import \"./styles.css\";\n\n// const App = () => {\n//   const [user, setUser] = useState(null);\n//   const [seats, setSeats] = useState(generateSeats());\n//   const [bookings, setBookings] = useState([]);\n//   function generateSeats() {\n//     const rows = \"ABCDEF\";\n//     const seats = [];\n//     for (let i = 0; i < rows.length; i++) {\n//       seats.push(\n//         Array.from({ length: i === 5 ? 6 : 8 }, (_, index) => ({\n//           status: \"available\",\n//           name: `${rows[i]}${index + 1}`,\n//         }))\n//       );\n//     }\n//     return seats;\n//   }\n\n//   const handleSeatSelect = (rowIndex, seatIndex) => {\n//     if (!user) {\n//       alert(\"Please login first.\");\n//       return;\n//     }\n\n//     const updatedSeats = [...seats];\n//     const seat = updatedSeats[rowIndex][seatIndex];\n//     if (seat.status === \"available\") {\n//       seat.status = \"selected\";\n//     } else if (seat.status === \"selected\") {\n//       seat.status = \"available\";\n//     }\n//     setSeats(updatedSeats);\n//   };\n\n//   const handleBookingSubmit = ({ name, numTickets }) => {\n//     if (!user) {\n//       alert(\"Please login first.\");\n//       return;\n//     }\n\n//     const selectedSeatsCount = seats\n//       .flat()\n//       .filter((seat) => seat.status === \"selected\").length;\n//     if (selectedSeatsCount !== numTickets) {\n//       alert(\"Please select the correct number of seats.\");\n//       return;\n//     }\n\n//     const booking = { name, seats: [] };\n//     seats.forEach((row, rowIndex) => {\n//       row.forEach((seat, seatIndex) => {\n//         if (seat.status === \"selected\") {\n//           booking.seats.push(\n//             `${String.fromCharCode(65 + rowIndex)}${seatIndex + 1}`\n//           );\n//           seat.status = \"blocked\";\n//         }\n//       });\n//     });\n//     setBookings([...bookings, booking]);\n//     setSeats([...seats]);\n//   };\n\n//   const handleLogin = (username) => {\n//     setUser(username);\n//   };\n\n//   const handleLogout = () => {\n//     setUser(null);\n//   };\n\n//   const getTotalSeats = () => seats.flat().length;\n//   const getBookedSeats = () =>\n//     bookings.reduce((acc, booking) => acc + booking.seats.length, 0);\n//   const getAvailableSeats = () => getTotalSeats() - getBookedSeats();\n\n//   return (\n//     <div className=\"app\">\n//       <h1 className=\"title\">Book My Movie</h1>\n//       {user ? (\n//         <div className=\"user-section\">\n//           <p>Welcome, {user}!</p>\n//           <button onClick={handleLogout}>Logout</button>\n\n//           <BookingForm onSubmit={handleBookingSubmit} />\n//           <Theater seats={seats} onSelectSeat={handleSeatSelect} />\n\n//           <div className=\"booking-details\">\n//             <h2>Booking Details</h2>\n//             <p>Total Seats: {getTotalSeats()}</p>\n//             <p>Booked Seats: {getBookedSeats()}</p>\n//             <p>Available Seats: {getAvailableSeats()}</p>\n//             <h3>Bookings:</h3>\n//             <ul>\n//               {bookings.map((booking, index) => (\n//                 <li key={index}>\n//                   {booking.name} - Seats: {booking.seats.join(\", \")}\n//                 </li>\n//               ))}\n//             </ul>\n//           </div>\n//         </div>\n//       ) : (\n//         <Login onLogin={handleLogin} />\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;\n\nimport React, { useState } from \"react\";\nimport BookingForm from \"./components/BookingForm/BookingForm\";\nimport Theater from \"./components/Theater/Theater\";\nimport Login from \"./components/Login/Login\";\nimport \"./styles.css\";\n\nconst App = () => {\n  const [user, setUser] = useState(null);\n  const [seats, setSeats] = useState(generateSeats());\n  const [bookings, setBookings] = useState([]);\n\n  function generateSeats() {\n    const rows = \"ABCDEF\";\n    const seats = [];\n    for (let i = 0; i < rows.length; i++) {\n      seats.push(\n        Array.from({ length: i === 5 ? 6 : 8 }, (_, index) => ({\n          status: \"available\",\n          name: `${rows[i]}${index + 1}`,\n        }))\n      );\n    }\n    return seats;\n  }\n\n  const handleSeatSelect = (rowIndex, seatIndex) => {\n    if (!user) {\n      alert(\"Please login first.\");\n      return;\n    }\n\n    const updatedSeats = [...seats];\n    const seat = updatedSeats[rowIndex][seatIndex];\n    if (seat.status === \"available\") {\n      seat.status = \"selected\";\n    } else if (seat.status === \"selected\") {\n      seat.status = \"available\";\n    }\n    setSeats(updatedSeats);\n  };\n\n  const handleBookingSubmit = ({ name, numTickets }) => {\n    if (!user) {\n      alert(\"Please login first.\");\n      return;\n    }\n\n    const selectedSeatsCount = seats\n      .flat()\n      .filter((seat) => seat.status === \"selected\").length;\n    if (selectedSeatsCount !== numTickets) {\n      alert(\"Please select the correct number of seats.\");\n      return;\n    }\n\n    const booking = { name, seats: [] };\n    seats.forEach((row, rowIndex) => {\n      row.forEach((seat, seatIndex) => {\n        if (seat.status === \"selected\") {\n          booking.seats.push(\n            `${String.fromCharCode(65 + rowIndex)}${seatIndex + 1}`\n          );\n          seat.status = \"blocked\";\n        }\n      });\n    });\n    setBookings([...bookings, booking]);\n    setSeats([...seats]);\n  };\n\n  const handleLogin = (username) => {\n    setUser(username);\n  };\n\n  const handleLogout = () => {\n    setUser(null);\n  };\n\n  const getTotalSeats = () => seats.flat().length;\n  const getBookedSeats = () =>\n    bookings.reduce((acc, booking) => acc + booking.seats.length, 0);\n  const getAvailableSeats = () => getTotalSeats() - getBookedSeats();\n\n  return (\n    <div className=\"app\">\n      <h1 className=\"title\">Book My Movie</h1>\n      {user ? (\n        <div className=\"user-section\">\n          <p>Welcome, {user}!</p>\n          <button className=\"logout-button\" onClick={handleLogout}>\n            Logout\n          </button>\n\n          <BookingForm onSubmit={handleBookingSubmit} />\n          <Theater seats={seats} onSelectSeat={handleSeatSelect} />\n\n          <div className=\"booking-details\">\n            <h2>Booking Details</h2>\n            <p>Total Seats: {getTotalSeats()}</p>\n            <p>Booked Seats: {getBookedSeats()}</p>\n            <p>Available Seats: {getAvailableSeats()}</p>\n            <h3>Bookings:</h3>\n            <ul>\n              {bookings.map((booking, index) => (\n                <li key={index}>\n                  {booking.name} - Seats: {booking.seats.join(\", \")}\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      ) : (\n        <Login onLogin={handleLogin} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappingsvC,MAAO,CAAAC,WAAW,KAAM,sCAAsC,CAC9D,MAAO,CAAAC,OAAO,KAAM,8BAA8B,CAClD,MAAO,CAAAC,KAAK,KAAM,0BAA0B,CAC5C,MAAO,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEtB,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CAChB,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACW,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAACa,aAAa,CAAC,CAAC,CAAC,CACnD,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CAE5C,QAAS,CAAAa,aAAaA,CAAA,CAAG,CACvB,KAAM,CAAAG,IAAI,CAAG,QAAQ,CACrB,KAAM,CAAAL,KAAK,CAAG,EAAE,CAChB,IAAK,GAAI,CAAAM,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGD,IAAI,CAACE,MAAM,CAAED,CAAC,EAAE,CAAE,CACpCN,KAAK,CAACQ,IAAI,CACRC,KAAK,CAACC,IAAI,CAAC,CAAEH,MAAM,CAAED,CAAC,GAAK,CAAC,CAAG,CAAC,CAAG,CAAE,CAAC,CAAE,CAACK,CAAC,CAAEC,KAAK,IAAM,CACrDC,MAAM,CAAE,WAAW,CACnBC,IAAI,IAAAC,MAAA,CAAKV,IAAI,CAACC,CAAC,CAAC,EAAAS,MAAA,CAAGH,KAAK,CAAG,CAAC,CAC9B,CAAC,CAAC,CACJ,CAAC,CACH,CACA,MAAO,CAAAZ,KAAK,CACd,CAEA,KAAM,CAAAgB,gBAAgB,CAAGA,CAACC,QAAQ,CAAEC,SAAS,GAAK,CAChD,GAAI,CAACpB,IAAI,CAAE,CACTqB,KAAK,CAAC,qBAAqB,CAAC,CAC5B,OACF,CAEA,KAAM,CAAAC,YAAY,CAAG,CAAC,GAAGpB,KAAK,CAAC,CAC/B,KAAM,CAAAqB,IAAI,CAAGD,YAAY,CAACH,QAAQ,CAAC,CAACC,SAAS,CAAC,CAC9C,GAAIG,IAAI,CAACR,MAAM,GAAK,WAAW,CAAE,CAC/BQ,IAAI,CAACR,MAAM,CAAG,UAAU,CAC1B,CAAC,IAAM,IAAIQ,IAAI,CAACR,MAAM,GAAK,UAAU,CAAE,CACrCQ,IAAI,CAACR,MAAM,CAAG,WAAW,CAC3B,CACAZ,QAAQ,CAACmB,YAAY,CAAC,CACxB,CAAC,CAED,KAAM,CAAAE,mBAAmB,CAAGC,IAAA,EAA0B,IAAzB,CAAET,IAAI,CAAEU,UAAW,CAAC,CAAAD,IAAA,CAC/C,GAAI,CAACzB,IAAI,CAAE,CACTqB,KAAK,CAAC,qBAAqB,CAAC,CAC5B,OACF,CAEA,KAAM,CAAAM,kBAAkB,CAAGzB,KAAK,CAC7B0B,IAAI,CAAC,CAAC,CACNC,MAAM,CAAEN,IAAI,EAAKA,IAAI,CAACR,MAAM,GAAK,UAAU,CAAC,CAACN,MAAM,CACtD,GAAIkB,kBAAkB,GAAKD,UAAU,CAAE,CACrCL,KAAK,CAAC,4CAA4C,CAAC,CACnD,OACF,CAEA,KAAM,CAAAS,OAAO,CAAG,CAAEd,IAAI,CAAEd,KAAK,CAAE,EAAG,CAAC,CACnCA,KAAK,CAAC6B,OAAO,CAAC,CAACC,GAAG,CAAEb,QAAQ,GAAK,CAC/Ba,GAAG,CAACD,OAAO,CAAC,CAACR,IAAI,CAAEH,SAAS,GAAK,CAC/B,GAAIG,IAAI,CAACR,MAAM,GAAK,UAAU,CAAE,CAC9Be,OAAO,CAAC5B,KAAK,CAACQ,IAAI,IAAAO,MAAA,CACbgB,MAAM,CAACC,YAAY,CAAC,EAAE,CAAGf,QAAQ,CAAC,EAAAF,MAAA,CAAGG,SAAS,CAAG,CAAC,CACvD,CAAC,CACDG,IAAI,CAACR,MAAM,CAAG,SAAS,CACzB,CACF,CAAC,CAAC,CACJ,CAAC,CAAC,CACFT,WAAW,CAAC,CAAC,GAAGD,QAAQ,CAAEyB,OAAO,CAAC,CAAC,CACnC3B,QAAQ,CAAC,CAAC,GAAGD,KAAK,CAAC,CAAC,CACtB,CAAC,CAED,KAAM,CAAAiC,WAAW,CAAIC,QAAQ,EAAK,CAChCnC,OAAO,CAACmC,QAAQ,CAAC,CACnB,CAAC,CAED,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzBpC,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,CAED,KAAM,CAAAqC,aAAa,CAAGA,CAAA,GAAMpC,KAAK,CAAC0B,IAAI,CAAC,CAAC,CAACnB,MAAM,CAC/C,KAAM,CAAA8B,cAAc,CAAGA,CAAA,GACrBlC,QAAQ,CAACmC,MAAM,CAAC,CAACC,GAAG,CAAEX,OAAO,GAAKW,GAAG,CAAGX,OAAO,CAAC5B,KAAK,CAACO,MAAM,CAAE,CAAC,CAAC,CAClE,KAAM,CAAAiC,iBAAiB,CAAGA,CAAA,GAAMJ,aAAa,CAAC,CAAC,CAAGC,cAAc,CAAC,CAAC,CAElE,mBACEzC,KAAA,QAAK6C,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBhD,IAAA,OAAI+C,SAAS,CAAC,OAAO,CAAAC,QAAA,CAAC,eAAa,CAAI,CAAC,CACvC5C,IAAI,cACHF,KAAA,QAAK6C,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3B9C,KAAA,MAAA8C,QAAA,EAAG,WAAS,CAAC5C,IAAI,CAAC,GAAC,EAAG,CAAC,cACvBJ,IAAA,WAAQ+C,SAAS,CAAC,eAAe,CAACE,OAAO,CAAER,YAAa,CAAAO,QAAA,CAAC,QAEzD,CAAQ,CAAC,cAEThD,IAAA,CAACJ,WAAW,EAACsD,QAAQ,CAAEtB,mBAAoB,CAAE,CAAC,cAC9C5B,IAAA,CAACH,OAAO,EAACS,KAAK,CAAEA,KAAM,CAAC6C,YAAY,CAAE7B,gBAAiB,CAAE,CAAC,cAEzDpB,KAAA,QAAK6C,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BhD,IAAA,OAAAgD,QAAA,CAAI,iBAAe,CAAI,CAAC,cACxB9C,KAAA,MAAA8C,QAAA,EAAG,eAAa,CAACN,aAAa,CAAC,CAAC,EAAI,CAAC,cACrCxC,KAAA,MAAA8C,QAAA,EAAG,gBAAc,CAACL,cAAc,CAAC,CAAC,EAAI,CAAC,cACvCzC,KAAA,MAAA8C,QAAA,EAAG,mBAAiB,CAACF,iBAAiB,CAAC,CAAC,EAAI,CAAC,cAC7C9C,IAAA,OAAAgD,QAAA,CAAI,WAAS,CAAI,CAAC,cAClBhD,IAAA,OAAAgD,QAAA,CACGvC,QAAQ,CAAC2C,GAAG,CAAC,CAAClB,OAAO,CAAEhB,KAAK,gBAC3BhB,KAAA,OAAA8C,QAAA,EACGd,OAAO,CAACd,IAAI,CAAC,YAAU,CAACc,OAAO,CAAC5B,KAAK,CAAC+C,IAAI,CAAC,IAAI,CAAC,GAD1CnC,KAEL,CACL,CAAC,CACA,CAAC,EACF,CAAC,EACH,CAAC,cAENlB,IAAA,CAACF,KAAK,EAACwD,OAAO,CAAEf,WAAY,CAAE,CAC/B,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAApC,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}